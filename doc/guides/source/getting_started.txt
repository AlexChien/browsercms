= Getting Started

The purpose of this guide is help new developers get up and running with BrowserCMS. It covers how to:

* Get the latest copy of the source code.
* Build and install the BrowserCMS product.
* Create a new project which uses BrowserCMS

== Installation
BrowserCMS is packaged as a gem, which can be included in any Rails project. The gem contains the code for the cms
application itself, as well as public assets, including stylesheets, images and javascript. These assets will
be copied from the gem into your project as part of the install process.

As of 3.0.0 (Beta), there is there is no gem released yet on rubyforge, so it must be built from source.

=== Things you need first
Before you can BrowserCMS working, there are few other bits of software you should have installed.

1. *Git* - Distributed version control system. The code for BrowserCMS is on http://github.com/browsermedia/browsercms/[Git Hub], so you need to http://git-scm.com[get Git] to get it.
2. *Rails 2.3* (or later) - We make use of some of the newer features from Rails like templates.
3. *A Database* - Either Mysql or the Sqlite gems should be installed.
4. *Jeweler* - Another gem http://technicalpickles.github.com/jeweler[Jeweler] is required to build the gem yourself locally.

=== Getting the source from GitHub
To build the gem from source, and install it on your system, type the following:

    git clone git://github.com/browsermedia/browsercms.git

=== Installing the Gem locally
Once you have the source code, you can build and install the Gem via:

    cd browsercms
    rake install

On *unix, this will sudo install, so you will need to provide your password. Once you have the BrowserCMS Gem installed,
you can use it to create new projects, which will be configured to use it.

== Starting a new project
The next step is to create a rails project, which will include BrowserCMS, much like you would with any rails project.
To make things easier, BrowserCMS comes with two application templates, which create the
initial rails application, configured for BrowserCMS. For now, you need to use the app templates from the source
directory of cms. Here are the two options when starting a project.

* /templates/demo.rb - If you are new to BrowserCMS, and want to experiment, use this. It builds a sample site with a few pages, using our default theme, and adds some content to play around with.
* /templates/blank.rb - Use this if you want a completely empty site. Most 'real' projects will use this to start, as there is no 'dummy' data to remove before building a site.

To create a new project (using the demo template, for a MySQL database), run the following:

    cd ~/projects
    rails my_new_project_name -d mysql -m /path/to/browsercms_source_code/templates/demo.rb
    cd my_new_project_name
    script/server

This is going to create the development and testing copies of the database, migrate the db, populate it with some initial data, and copy all of the necessary files from the gem into the rails project.
To create a project that uses SQLite, rather than MySQL as the database, you can run the following command instead (You will need the SQLite gem installed already).

    rails my_new_project_name -m /path/to/browsercms_source_code/templates/demo.rb

=== Using your Site
Once installed, you can go to http://localhost:3000 to see the running CMS application. To log into the admin for the CMS,
go to http://localhost:3000/cms, and type in the username and password. The default when running in development mode
is username=cmsadmin, password=cmsadmin.

To learn more about the core things you can do with BrowserCMS, see the link:user_guide.html[User's Guide].


